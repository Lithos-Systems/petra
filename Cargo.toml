[package]
name = "petra"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "Programmable Engine for Telemetry, Runtime, and Automation"
license = "MIT"
repository = "https://github.com/your-org/petra"
keywords = ["automation", "plc", "scada", "industrial", "iot"]
categories = ["embedded", "network-programming", "automation"]

[dependencies]
# Core dependencies (always included)
tokio = { version = "1.40", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"
serde_json = "1.0"
toml = "0.8"
dashmap = "6.0"
parking_lot = "0.12"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
chrono = { version = "0.4", features = ["serde"] }
thiserror = "1.0"
async-trait = "0.1"
anyhow = "1.0"
clap = { version = "4.5", features = ["derive", "env"] }
bytes = "1.5"
md5 = "0.7"

# Conditional dependencies based on features
# Metrics
metrics = { version = "0.24", optional = true }
metrics-exporter-prometheus = { version = "0.15", optional = true }

# Protocol support
rumqttc = { version = "0.24", optional = true }
snap7-sys = { version = "1.0", optional = true }
tokio-modbus = { version = "0.14", optional = true }
opcua = { version = "0.12", optional = true }

# Storage
parquet = { version = "50.0", optional = true }
arrow = { version = "50.0", optional = true }
arrow-array = { version = "50.0", optional = true }
arrow-schema = { version = "50.0", optional = true }
clickhouse = { version = "0.11", optional = true }
aws-sdk-s3 = { version = "1.36", optional = true }
rocksdb = { version = "0.22", optional = true }

# Compression
zstd = { version = "0.13", optional = true }
lz4 = { version = "1.24", optional = true }

# Security
sha2 = { version = "0.10", optional = true }
base64 = { version = "0.22", optional = true }
bcrypt = { version = "0.15", optional = true }
jsonwebtoken = { version = "9.3", optional = true }
ed25519-dalek = { version = "2.1", optional = true }

# Web framework
axum = { version = "0.7", optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.5", features = ["cors", "compression"], optional = true }
hyper = { version = "1.3", optional = true }

# Notifications
lettre = { version = "0.11", optional = true }

# System info
sysinfo = { version = "0.31", optional = true }

# Validation
regex = { version = "1.10", optional = true }
validator = { version = "0.18", optional = true }
once_cell = { version = "1.19", optional = true }
jsonschema = { version = "0.18", optional = true }

# Development dependencies
notify = { version = "6.1", optional = true }
eframe = { version = "0.27", optional = true }
egui = { version = "0.27", optional = true }
egui-phosphor = { version = "0.5", optional = true }
egui_plot = { version = "0.27", optional = true }
pprof = { version = "0.13", features = ["flamegraph"], optional = true }

# Extended types
serde_with = { version = "3.8", optional = true }

[build-dependencies]
chrono = "0.4"

[dev-dependencies]
criterion = "0.5"
proptest = "1.4"
tempfile = "3.10"
mockall = "0.12"

[features]
default = ["edge"]

# Bundle features
edge = ["mqtt", "basic-storage", "basic-security", "standard-monitoring"]
scada = ["mqtt", "industrial", "enterprise-storage", "enterprise-security", "enhanced-monitoring", "basic-alarms"]
production = ["mqtt", "optimized", "enterprise-storage", "enterprise-security", "enhanced-monitoring", "metrics", "health"]
enterprise = ["mqtt", "industrial", "enterprise-storage", "enterprise-security", "enhanced-monitoring", "metrics", "full-alarms", "full-web", "full-types", "full-validation"]
development = ["edge", "dev-tools", "profiling"]

# Core features
mqtt = ["dep:rumqttc"]
optimized = []

# Monitoring levels (mutually exclusive)
basic-monitoring = []
standard-monitoring = ["basic-monitoring"]
enhanced-monitoring = ["standard-monitoring"]

# Metrics
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus"]

# Protocol features
s7-support = ["dep:snap7-sys"]
modbus-support = ["dep:tokio-modbus"]
opcua-support = ["dep:opcua"]
industrial = ["s7-support", "modbus-support", "opcua-support"]
iot = ["mqtt"]

# Storage features
history = ["dep:parquet", "dep:arrow", "dep:arrow-array", "dep:arrow-schema"]
advanced-storage = ["history", "dep:clickhouse", "dep:aws-sdk-s3", "dep:rocksdb"]
clickhouse = ["dep:clickhouse"]
s3 = ["dep:aws-sdk-s3"]
compression = ["dep:zstd", "dep:lz4"]
wal = ["dep:rocksdb"]
basic-storage = ["history"]
enterprise-storage = ["advanced-storage", "compression", "wal"]

# Security features
security = ["dep:sha2", "dep:base64"]
basic-auth = ["security", "dep:bcrypt"]
jwt-auth = ["security", "dep:jsonwebtoken"]
rbac = ["security"]
audit = ["security"]
signing = ["security", "dep:ed25519-dalek"]
basic-security = ["security", "basic-auth"]
enterprise-security = ["basic-security", "jwt-auth", "rbac", "audit", "signing"]

# Type features
extended-types = ["dep:serde_with"]
engineering-types = ["extended-types"]
quality-codes = ["extended-types"]
value-arithmetic = ["extended-types"]
unit-conversion = ["engineering-types"]
enhanced-types = ["extended-types", "engineering-types", "quality-codes", "value-arithmetic"]
full-types = ["enhanced-types", "unit-conversion"]

# Validation features
validation = ["dep:regex", "dep:validator", "dep:once_cell"]
regex-validation = ["validation"]
schema-validation = ["validation", "dep:jsonschema"]
composite-validation = ["validation"]
cross-field-validation = ["composite-validation"]
basic-validation = ["validation", "regex-validation"]
advanced-validation = ["basic-validation", "schema-validation", "composite-validation"]
full-validation = ["advanced-validation", "cross-field-validation"]

# Alarm features
alarms = []
email = ["alarms", "dep:lettre"]
twilio = ["alarms", "web"]
basic-alarms = ["alarms", "email"]
full-alarms = ["basic-alarms", "twilio"]

# Web features
web = ["dep:axum", "dep:tower", "dep:tower-http", "dep:hyper"]
health = ["dep:axum", "dep:tower", "dep:tower-http", "dep:sysinfo"]
detailed-health = ["health", "metrics"]
health-metrics = ["health", "metrics"]
health-history = ["health", "history"]
custom-endpoints = ["health"]
basic-web = ["web", "health"]
full-web = ["basic-web", "detailed-health", "health-metrics", "health-history"]

# Development features
examples = []
burn-in = ["examples"]
hot-swap = ["dep:notify"]
gui = ["dep:eframe", "dep:egui", "dep:egui-phosphor", "dep:egui_plot"]
profiling = []
pprof = ["dep:pprof", "profiling"]
json-schema = ["dep:jsonschema"]
dev-tools = ["examples", "hot-swap", "json-schema"]
full-dev = ["dev-tools", "gui", "profiling", "pprof", "burn-in"]

# Block features
async-blocks = []
circuit-breaker = []
enhanced-error-handling = ["circuit-breaker"]
retry-logic = []
advanced-blocks = []
pid-control = []
statistics = []
ml-blocks = []
mqtt-blocks = ["mqtt"]
extended-types-blocks = ["extended-types"]
data-processing = ["extended-types-blocks"]

[[bin]]
name = "petra"
path = "src/main.rs"

[[bench]]
name = "engine"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.release-with-debug]
inherits = "release"
strip = false
debug = true
