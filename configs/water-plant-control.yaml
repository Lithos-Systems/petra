# PETRA Water Plant Control Configuration with Web Server
# This configuration includes web server settings for PETRA Designer

version: "1.0"
# ============================================================================
# WEB SERVER CONFIGURATION
# ============================================================================

web:
  bind_address: "0.0.0.0"
  port: 8080
  websocket_enabled: true
  cors_origins:
    - "http://localhost:5173"  # PETRA Designer
    - "http://localhost:3000"  # Alternative port
    - "http://127.0.0.1:5173"
    - "http://127.0.0.1:3000"

# Storage Configuration (if using history feature)
storage:
  type: parquet
  path: /var/lib/petra/history
  retention_days: 30
  
# Metrics
metrics:
  enabled: true
  port: 9090
  endpoint: "/metrics"

# Health API
health:
  enabled: true
  port: 8089
  endpoint: "/health"
# ============================================================================
# SYSTEM PARAMETERS
# ============================================================================

scan_time_ms: 100  # 100ms scan cycle for responsive control
max_scan_jitter_ms: 10  # Maximum allowed jitter (10% of scan time)
error_recovery: true
max_consecutive_errors: 10

# ============================================================================
# SIGNAL DEFINITIONS (same as original)
# ============================================================================

signals:
  # Tank Level Monitoring
  - name: "tank.level_feet"
    type: "float"
    initial: 12.5  # 50% of 25ft tank
    description: "Ground storage tank level in feet"
    
  - name: "tank.level_percent"
    type: "float"
    initial: 50.0
    description: "Tank level percentage"
    
  # Well Pump Control
  - name: "well.running"
    type: "bool"
    initial: false
    description: "Well pump running status"
    
  - name: "well.flow_rate"
    type: "float"
    initial: 0.0
    description: "Well pump flow rate (gpm)"
    
  - name: "well.setpoint_flow"
    type: "float"
    initial: 2000.0
    description: "Well pump flow rate when running"
    
  # Well Pump Control Signals
  - name: "well.start_request"
    type: "bool"
    initial: false
    description: "Well pump start request signal"
    
  - name: "well.stop_request"
    type: "bool"
    initial: false
    description: "Well pump stop request signal"
    
  # Well Pump Setpoints
  - name: "well.start_level"
    type: "float"
    initial: 8.0
    description: "Tank level to start well pump (feet)"
    
  - name: "well.stop_level"
    type: "float"
    initial: 20.0
    description: "Tank level to stop well pump (feet)"
    
  # System Pressure
  - name: "system.pressure"
    type: "float"
    initial: 60.0
    description: "System pressure (psi)"
    
  - name: "system.demand"
    type: "float"
    initial: 2500.0
    description: "System demand (gpm)"
    
  # Booster Pump 1
  - name: "pump1.running"
    type: "bool"
    initial: false
    description: "Pump 1 running status"
    
  - name: "pump1.flow_rate"
    type: "float"
    initial: 0.0
    description: "Pump 1 actual flow (gpm)"
    
  - name: "pump1.setpoint_flow"
    type: "float"
    initial: 1500.0
    description: "Pump 1 flow rate when running"
    
  - name: "pump1.efficiency"
    type: "float"
    initial: 85.0
    description: "Pump 1 efficiency (%)"
    
  - name: "pump1.is_lead"
    type: "bool"
    initial: true
    description: "Pump 1 is designated lead pump"
    
  # Booster Pump 2
  - name: "pump2.running"
    type: "bool"
    initial: false
    description: "Pump 2 running status"
    
  - name: "pump2.flow_rate"
    type: "float"
    initial: 0.0
    description: "Pump 2 actual flow (gpm)"
    
  - name: "pump2.setpoint_flow"
    type: "float"
    initial: 1500.0
    description: "Pump 2 flow rate when running"
    
  - name: "pump2.efficiency"
    type: "float"
    initial: 85.0
    description: "Pump 2 efficiency (%)"
    
  - name: "pump2.is_lead"
    type: "bool"
    initial: false
    description: "Pump 2 is designated lead pump"
    
  # Booster Pump 3
  - name: "pump3.running"
    type: "bool"
    initial: false
    description: "Pump 3 running status"
    
  - name: "pump3.flow_rate"
    type: "float"
    initial: 0.0
    description: "Pump 3 actual flow (gpm)"
    
  - name: "pump3.setpoint_flow"
    type: "float"
    initial: 2000.0
    description: "Pump 3 flow rate when running"
    
  - name: "pump3.efficiency"
    type: "float"
    initial: 90.0
    description: "Pump 3 efficiency (%)"
    
  - name: "pump3.is_lead"
    type: "bool"
    initial: false
    description: "Pump 3 is designated lead pump"
    
  # Pump Status Signals
  - name: "pumps.any_running"
    type: "bool"
    initial: false
    description: "Any pump is running"
    
  - name: "pumps.lead_running"
    type: "bool"
    initial: false
    description: "Lead pump is running"
    
  - name: "pumps.total_flow"
    type: "float"
    initial: 0.0
    description: "Total flow from all pumps"
    
  # Pressure Monitoring Signals
  - name: "pressure.low_for_lead"
    type: "bool"
    initial: false
    description: "Pressure low enough to start lead pump"
    
  - name: "pressure.high_for_lead"
    type: "bool"
    initial: false
    description: "Pressure high enough to stop lead pump"
    
  - name: "pressure.low_for_lag"
    type: "bool"
    initial: false
    description: "Pressure low enough to start lag pumps"
    
  - name: "pressure.high_for_lag"
    type: "bool"
    initial: false
    description: "Pressure high enough to stop lag pumps"
    
  # Pressure Setpoints
  - name: "pressure.lead_start"
    type: "float"
    initial: 55.0
    description: "Pressure to start lead pump (psi)"
    
  - name: "pressure.lead_stop"
    type: "float"
    initial: 65.0
    description: "Pressure to stop lead pump (psi)"
    
  - name: "pressure.lag_start"
    type: "float"
    initial: 50.0
    description: "Pressure to start lag pumps (psi)"
    
  - name: "pressure.lag_stop"
    type: "float"
    initial: 70.0
    description: "Pressure to stop lag pumps (psi)"
    
  # Hydrotank Monitoring
  - name: "hydrotank1.air_blanket"
    type: "float"
    initial: 50.0
    description: "Hydrotank 1 air blanket percentage"
    
  - name: "hydrotank2.air_blanket"
    type: "float"
    initial: 50.0
    description: "Hydrotank 2 air blanket percentage"
    
  - name: "hydrotank1.water_level"
    type: "float"
    initial: 50.0
    description: "Hydrotank 1 water level percentage"
    
  - name: "hydrotank2.water_level"
    type: "float"
    initial: 50.0
    description: "Hydrotank 2 water level percentage"
    
  - name: "compressor1.running"
    type: "bool"
    initial: false
    description: "Air compressor 1 running status"
    
  - name: "compressor2.running"
    type: "bool"
    initial: false
    description: "Air compressor 2 running status"
    
  # Hydrotank Setpoints
  - name: "hydrotank.air_blanket_min"
    type: "float"
    initial: 45.0
    description: "Minimum air blanket to start compressor (%)"
    
  - name: "hydrotank.air_blanket_max"
    type: "float"
    initial: 55.0
    description: "Maximum air blanket to stop compressor (%)"
    
  # Hydrotank Signals
  - name: "ht1.air_low"
    type: "bool"
    initial: false
    description: "Hydrotank 1 air blanket low condition"
    
  - name: "ht1.air_high"
    type: "bool"
    initial: false
    description: "Hydrotank 1 air blanket high condition"
    
  - name: "ht2.air_low"
    type: "bool"
    initial: false
    description: "Hydrotank 2 air blanket low condition"
    
  - name: "ht2.air_high"
    type: "bool"
    initial: false
    description: "Hydrotank 2 air blanket high condition"
    
  # Alarms
  - name: "alarm.tank_low"
    type: "bool"
    initial: false
    description: "Tank low level alarm"
    
  - name: "alarm.tank_high"
    type: "bool"
    initial: false
    description: "Tank high level alarm"
    
  - name: "alarm.pressure_low"
    type: "bool"
    initial: false
    description: "System low pressure alarm"
    
  - name: "alarm.pressure_high"
    type: "bool"
    initial: false
    description: "System high pressure alarm"

  # CONSTANT SIGNALS FOR SELECT BLOCKS
  - name: "constants.zero"
    type: "float"
    initial: 0.0
    description: "Constant zero value for flow calculations"
    
  # Additional signals for SELECT block inputs
  - name: "well.selector"
    type: "integer"
    initial: 0
    description: "Selector for well flow rate (0=zero, 1=setpoint)"
    
  - name: "pump1.selector"
    type: "integer"
    initial: 0
    description: "Selector for pump1 flow rate (0=zero, 1=setpoint)"
    
  - name: "pump2.selector"
    type: "integer"
    initial: 0
    description: "Selector for pump2 flow rate (0=zero, 1=setpoint)"
    
  - name: "pump3.selector"
    type: "integer"
    initial: 0
    description: "Selector for pump3 flow rate (0=zero, 1=setpoint)"
    
  # Other constants
  - name: "constants.hundred"
    type: "float"
    initial: 100.0
    description: "Constant hundred value for efficiency calculations"
    
  - name: "setpoints.low_gst_alarm"
    type: "float"
    initial: 5.0
    description: "Constant five feet for tank low alarm"
    
  - name: "setpoints.high_gst_alarm"
    type: "float"
    initial: 22.5
    description: "Constant 22.5 feet for tank high alarm"
    
  - name: "setpoints.low_pressure_alarm"
    type: "float"
    initial: 45.0
    description: "Constant 40 psi for pressure low alarm"
    
  - name: "setpoints.high_pressure_alarm"
    type: "float"
    initial: 70.0
    description: "Constant 70 psi for pressure high alarm"
    
  # INTERMEDIATE CALCULATION SIGNALS
  - name: "pump_12_total"
    type: "float"
    initial: 0.0
    description: "Combined flow from pumps 1 and 2"
    
  - name: "pumps_12_any"
    type: "bool"
    initial: false
    description: "Pump 1 or 2 running"
    
  - name: "lead1_running"
    type: "bool"
    initial: false
    description: "Pump 1 running as lead"
    
  - name: "lead2_running"
    type: "bool"
    initial: false
    description: "Pump 2 running as lead"
    
  - name: "lead3_running"
    type: "bool"
    initial: false
    description: "Pump 3 running as lead"
    
  - name: "lead_12_any"
    type: "bool"
    initial: false
    description: "Lead pump 1 or 2 running"
    
  - name: "pump1.lead_start_request"
    type: "bool"
    initial: false
    description: "Pump 1 lead start request"
    
  - name: "pump1.lag_start_request"
    type: "bool"
    initial: false
    description: "Pump 1 lag start request"
    
  - name: "pump1.start_request"
    type: "bool"
    initial: false
    description: "Pump 1 combined start request"
    
  - name: "pump1.start_delayed"
    type: "bool"
    initial: false
    description: "Pump 1 start after timer delay"
    
  - name: "pump2.lead_start_request"
    type: "bool"
    initial: false
    description: "Pump 2 lead start request"
    
  - name: "pump2.lag_start_request"
    type: "bool"
    initial: false
    description: "Pump 2 lag start request"
    
  - name: "pump2.start_request"
    type: "bool"
    initial: false
    description: "Pump 2 combined start request"
    
  - name: "pump2.start_delayed"
    type: "bool"
    initial: false
    description: "Pump 2 start after timer delay"
    
  - name: "pump3.lead_start_request"
    type: "bool"
    initial: false
    description: "Pump 3 lead start request"
    
  - name: "pump3.lag_start_request"
    type: "bool"
    initial: false
    description: "Pump 3 lag start request"
    
  - name: "pump3.start_request"
    type: "bool"
    initial: false
    description: "Pump 3 combined start request"
    
  - name: "pump3.start_delayed"
    type: "bool"
    initial: false
    description: "Pump 3 start after timer delay"

# ============================================================================
# BLOCK DEFINITIONS (same as original)
# ============================================================================

blocks:
  # --------------------------------------------------------------------------
  # WELL PUMP CONTROL
  # --------------------------------------------------------------------------
  
  # Check if tank level is low enough to start well pump
  - name: "well_start_condition"
    type: "LT"
    inputs:
      in1: "tank.level_feet"
      in2: "well.start_level"
    outputs:
      out: "well.start_request"
      
  # Check if tank level is high enough to stop well pump
  - name: "well_stop_condition"
    type: "GT"
    inputs:
      in1: "tank.level_feet"
      in2: "well.stop_level"
    outputs:
      out: "well.stop_request"
      
  # Select well flow rate based on running status
  - name: "well_selector_calc"
    type: "ADD"
    inputs:
      in1: "well.running"
      in2: "constants.zero"
    outputs:
      out: "well.selector"
      
  - name: "well_flow_calc"
    type: "SELECT"
    inputs:
      selector: "well.selector"
      in0: "constants.zero"
      in1: "well.setpoint_flow"
    outputs:
      out: "well.flow_rate"
      
  # --------------------------------------------------------------------------
  # PRESSURE MONITORING
  # --------------------------------------------------------------------------
  
  # Check pressure conditions for lead pump
  - name: "pressure_low_lead_check"
    type: "LT"
    inputs:
      in1: "system.pressure"
      in2: "pressure.lead_start"
    outputs:
      out: "pressure.low_for_lead"
      
  - name: "pressure_high_lead_check"
    type: "GT"
    inputs:
      in1: "system.pressure"
      in2: "pressure.lead_stop"
    outputs:
      out: "pressure.high_for_lead"
      
  # Check pressure conditions for lag pumps
  - name: "pressure_low_lag_check"
    type: "LT"
    inputs:
      in1: "system.pressure"
      in2: "pressure.lag_start"
    outputs:
      out: "pressure.low_for_lag"
      
  - name: "pressure_high_lag_check"
    type: "GT"
    inputs:
      in1: "system.pressure"
      in2: "pressure.lag_stop"
    outputs:
      out: "pressure.high_for_lag"
      
  # --------------------------------------------------------------------------
  # PUMP CONTROL LOGIC
  # --------------------------------------------------------------------------
  
  # Pump 1 control logic
  - name: "pump1_lead_start"
    type: "AND"
    inputs:
      in1: "pump1.is_lead"
      in2: "pressure.low_for_lead"
    outputs:
      out: "pump1.lead_start_request"
      
  - name: "pump1_lag_start"
    type: "AND"
    inputs:
      in1: "pressure.low_for_lag"
      in2: "pumps.lead_running"
    outputs:
      out: "pump1.lag_start_request"
      
  - name: "pump1_start_combine"
    type: "OR"
    inputs:
      in1: "pump1.lead_start_request"
      in2: "pump1.lag_start_request"
    outputs:
      out: "pump1.start_request"
      
  - name: "pump1_start_timer"
    type: "ON_DELAY"
    inputs:
      in: "pump1.start_request"
    outputs:
      out: "pump1.start_delayed"
    params:
      preset_ms: 5000
      
  # Pump 2 control logic
  - name: "pump2_lead_start"
    type: "AND"
    inputs:
      in1: "pump2.is_lead"
      in2: "pressure.low_for_lead"
    outputs:
      out: "pump2.lead_start_request"
      
  - name: "pump2_lag_start"
    type: "AND"
    inputs:
      in1: "pressure.low_for_lag"
      in2: "pumps.lead_running"
    outputs:
      out: "pump2.lag_start_request"
      
  - name: "pump2_start_combine"
    type: "OR"
    inputs:
      in1: "pump2.lead_start_request"
      in2: "pump2.lag_start_request"
    outputs:
      out: "pump2.start_request"
      
  - name: "pump2_start_timer"
    type: "ON_DELAY"
    inputs:
      in: "pump2.start_request"
    outputs:
      out: "pump2.start_delayed"
    params:
      preset_ms: 5000
      
  # Pump 3 control logic
  - name: "pump3_lead_start"
    type: "AND"
    inputs:
      in1: "pump3.is_lead"
      in2: "pressure.low_for_lead"
    outputs:
      out: "pump3.lead_start_request"
      
  - name: "pump3_lag_start"
    type: "AND"
    inputs:
      in1: "pressure.low_for_lag"
      in2: "pumps.lead_running"
    outputs:
      out: "pump3.lag_start_request"
      
  - name: "pump3_start_combine"
    type: "OR"
    inputs:
      in1: "pump3.lead_start_request"
      in2: "pump3.lag_start_request"
    outputs:
      out: "pump3.start_request"
      
  - name: "pump3_start_timer"
    type: "ON_DELAY"
    inputs:
      in: "pump3.start_request"
    outputs:
      out: "pump3.start_delayed"
    params:
      preset_ms: 5000
      
  # --------------------------------------------------------------------------
  # FLOW CALCULATIONS
  # --------------------------------------------------------------------------
  
  # Select pump flow rates based on running status
  - name: "pump1_selector_calc"
    type: "ADD"
    inputs:
      in1: "pump1.running"
      in2: "constants.zero"
    outputs:
      out: "pump1.selector"
      
  - name: "pump2_selector_calc"
    type: "ADD"
    inputs:
      in1: "pump2.running"
      in2: "constants.zero"
    outputs:
      out: "pump2.selector"
      
  - name: "pump3_selector_calc"
    type: "ADD"
    inputs:
      in1: "pump3.running"
      in2: "constants.zero"
    outputs:
      out: "pump3.selector"
      
  - name: "pump1_flow_calc"
    type: "SELECT"
    inputs:
      selector: "pump1.selector"
      in0: "constants.zero"
      in1: "pump1.setpoint_flow"
    outputs:
      out: "pump1.flow_rate"
      
  - name: "pump2_flow_calc"
    type: "SELECT"
    inputs:
      selector: "pump2.selector"
      in0: "constants.zero"
      in1: "pump2.setpoint_flow"
    outputs:
      out: "pump2.flow_rate"
      
  - name: "pump3_flow_calc"
    type: "SELECT"
    inputs:
      selector: "pump3.selector"
      in0: "constants.zero"
      in1: "pump3.setpoint_flow"
    outputs:
      out: "pump3.flow_rate"
      
  # Calculate total pump flow
  - name: "pump_12_flow"
    type: "ADD"
    inputs:
      in1: "pump1.flow_rate"
      in2: "pump2.flow_rate"
    outputs:
      out: "pump_12_total"
      
  - name: "total_pump_flow"
    type: "ADD"
    inputs:
      in1: "pump_12_total"
      in2: "pump3.flow_rate"
    outputs:
      out: "pumps.total_flow"
      
  # --------------------------------------------------------------------------
  # PUMP STATUS MONITORING
  # --------------------------------------------------------------------------
  
  # Check if any pumps are running
  - name: "pumps_12_check"
    type: "OR"
    inputs:
      in1: "pump1.running"
      in2: "pump2.running"
    outputs:
      out: "pumps_12_any"
      
  - name: "pumps_any_check"
    type: "OR"
    inputs:
      in1: "pumps_12_any"
      in2: "pump3.running"
    outputs:
      out: "pumps.any_running"
      
  # Lead pump running check
  - name: "lead_pump1_running"
    type: "AND"
    inputs:
      in1: "pump1.is_lead"
      in2: "pump1.running"
    outputs:
      out: "lead1_running"
      
  - name: "lead_pump2_running"
    type: "AND"
    inputs:
      in1: "pump2.is_lead"
      in2: "pump2.running"
    outputs:
      out: "lead2_running"
      
  - name: "lead_pump3_running"
    type: "AND"
    inputs:
      in1: "pump3.is_lead"
      in2: "pump3.running"
    outputs:
      out: "lead3_running"
      
  - name: "lead_12_check"
    type: "OR"
    inputs:
      in1: "lead1_running"
      in2: "lead2_running"
    outputs:
      out: "lead_12_any"
      
  - name: "lead_running_check"
    type: "OR"
    inputs:
      in1: "lead_12_any"
      in2: "lead3_running"
    outputs:
      out: "pumps.lead_running"
      
  # --------------------------------------------------------------------------
  # HYDROTANK CONTROL
  # --------------------------------------------------------------------------
  
  # Hydrotank 1 compressor control
  - name: "ht1_air_low"
    type: "LT"
    inputs:
      in1: "hydrotank1.air_blanket"
      in2: "hydrotank.air_blanket_min"
    outputs:
      out: "ht1.air_low"
      
  - name: "ht1_air_high"
    type: "GT"
    inputs:
      in1: "hydrotank1.air_blanket"
      in2: "hydrotank.air_blanket_max"
    outputs:
      out: "ht1.air_high"
      
  # Hydrotank 2 compressor control
  - name: "ht2_air_low"
    type: "LT"
    inputs:
      in1: "hydrotank2.air_blanket"
      in2: "hydrotank.air_blanket_min"
    outputs:
      out: "ht2.air_low"
      
  - name: "ht2_air_high"
    type: "GT"
    inputs:
      in1: "hydrotank2.air_blanket"
      in2: "hydrotank.air_blanket_max"
    outputs:
      out: "ht2.air_high"
      
  # --------------------------------------------------------------------------
  # ALARMS
  # --------------------------------------------------------------------------
  
  # Tank level alarms
  - name: "tank_low_alarm"
    type: "LT"
    inputs:
      in1: "tank.level_feet"
      in2: "setpoints.low_gst_alarm"
    outputs:
      out: "alarm.tank_low"
      
  - name: "tank_high_alarm"
    type: "GT"
    inputs:
      in1: "tank.level_feet"
      in2: "setpoints.high_gst_alarm"
    outputs:
      out: "alarm.tank_high"
      
  # Pressure alarms
  - name: "pressure_low_alarm"
    type: "LT"
    inputs:
      in1: "system.pressure"
      in2: "setpoints.low_pressure_alarm"
    outputs:
      out: "alarm.pressure_low"
      
  - name: "pressure_high_alarm"
    type: "GT"
    inputs:
      in1: "system.pressure"
      in2: "setpoints.high_pressure_alarm"
    outputs:
      out: "alarm.pressure_high"
      
  # --------------------------------------------------------------------------
  # TANK LEVEL PERCENTAGE CALCULATION
  # --------------------------------------------------------------------------
  
  - name: "tank_level_percent_calc"
    type: "SCALE"
    inputs:
      in: "tank.level_feet"
    outputs:
      out: "tank.level_percent"
    params:
      in_min: 0.0
      in_max: 25.0    # 25 feet tank height
      out_min: 0.0
      out_max: 100.0  # Percentage
# Add this to the blocks section of configs/water-plant-control.yaml
# After the existing blocks, add:

  # --------------------------------------------------------------------------
  # TANK LEVEL SIMULATION
  # --------------------------------------------------------------------------
  
  # Calculate tank level based on well inflow and pump outflow
  - name: "tank_level_simulation"
    type: "TANK_SIMULATION"
    inputs:
      inflow: "well.flow_rate"      # Well pump flow into tank
      outflow: "pumps.total_flow"   # Total pump flow out of tank
    outputs:
      tank_level: "tank.level_feet"
    params:
      capacity_gallons: 200000.0    # 200k gallon tank
      height_feet: 25.0             # 25 feet tall tank
      
  # --------------------------------------------------------------------------
  # SYSTEM PRESSURE SIMULATION
  # --------------------------------------------------------------------------
  
  # Simple pressure calculation based on supply vs demand
  # This would be replaced with a more sophisticated model in production
  - name: "pressure_simulation"
    type: "SCALE"
    inputs:
      in: "pumps.total_flow"    # Use total pump flow as proxy for pressure
    outputs:
      out: "system.pressure"
    params:
      in_min: 0.0      # No flow
      in_max: 6000.0   # Max flow from 3 pumps + well
      out_min: 0.0     # No pressure
      out_max: 80.0    # Max system pressure
      
  # --------------------------------------------------------------------------
  # PUMP EFFICIENCY CALCULATIONS
  # --------------------------------------------------------------------------
  
  # Calculate pump efficiencies based on flow rates
  # In reality, this would come from VFD data or pump curves
  
  - name: "pump1_efficiency_calc"
    type: "SCALE"
    inputs:
      in: "pump1.flow_rate"
    outputs:
      out: "pump1.efficiency"
    params:
      in_min: 0.0
      in_max: 1500.0   # Pump rated flow
      out_min: 0.0
      out_max: 85.0    # Peak efficiency
      
  - name: "pump2_efficiency_calc"
    type: "SCALE"
    inputs:
      in: "pump2.flow_rate"
    outputs:
      out: "pump2.efficiency"
    params:
      in_min: 0.0
      in_max: 1500.0
      out_min: 0.0
      out_max: 85.0
      
  - name: "pump3_efficiency_calc"
    type: "SCALE"
    inputs:
      in: "pump3.flow_rate"
    outputs:
      out: "pump3.efficiency"
    params:
      in_min: 0.0
      in_max: 1500.0
      out_min: 0.0
      out_max: 85.0
# ============================================================================
# MQTT CONFIGURATION (Optional)
# ============================================================================

mqtt:
  host: "localhost"
  port: 1883
  client_id: "petra-water-plant"
  username: null  # Optional: MQTT username
  password: null  # Optional: MQTT password
  keepalive_secs: 60
  timeout_ms: 5000
  use_tls: false
  qos: 1
  retain: false
  subscribe_topics:
    - "petra/water_plant/setpoints/+"
  publish_topic_base: "petra/water_plant"
  auto_reconnect: true
  max_reconnect_attempts: 0  # 0 = unlimited
  reconnect_delay_secs: 5
