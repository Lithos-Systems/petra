name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Format check
      run: cargo fmt --all -- --check

    - name: Clippy
      run: cargo clippy --all-features -- -D warnings

    - name: Test
      run: cargo test --all-features

    - name: Security audit
      run: |
        cargo install cargo-audit
        cargo audit

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Petra
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: petra:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build CA Service
      uses: docker/build-push-action@v5
      with:
        context: ./ca-service
        file: ./ca-service/Dockerfile
        push: false
        tags: petra-ca-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: [test, docker]
    steps:
    - uses: actions/checkout@v4

    - name: Start services
      run: |
        docker-compose -f docker-compose.yml up -d
        sleep 30

    - name: Test MQTT connectivity
      run: |
        docker exec petra-mosquitto mosquitto_pub -t test -m "hello"

    - name: Test CA service health
      run: |
        curl -f http://localhost:8443/health || exit 1

    - name: Logs on failure
      if: failure()
      run: |
        docker-compose logs
