# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Test matrix across OS and Rust versions
  test:
    name: Test - ${{ matrix.os }} / ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
        include:
          - os: ubuntu-latest
            rust: nightly
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.rust }}
      
      - name: Run tests
        run: cargo test --workspace --all-features
      
      - name: Run tests (no default features)
        run: cargo test --workspace --no-default-features

  # Formatting check
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --all -- --check

  # Clippy linting with deny warnings
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- --deny warnings
      
      - name: Run clippy (no default features)
        run: cargo clippy --workspace --all-targets --no-default-features -- --deny warnings

  # Security audit
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # Documentation build and link check
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@nightly
      
      - name: Check documentation
        run: cargo doc --workspace --all-features --no-deps
        env:
          RUSTDOCFLAGS: --deny rustdoc::broken_intra_doc_links

  # Build check for all targets
  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Check build
        run: cargo check --workspace --all-targets --all-features
      
      - name: Check build (minimal)
        run: cargo check --workspace --all-targets --no-default-features
